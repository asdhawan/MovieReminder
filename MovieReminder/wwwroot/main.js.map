{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/movie.ts","webpack:///./src/app/moviedetails/moviedetails.component.html","webpack:///./src/app/moviedetails/moviedetails.component.ts","webpack:///./src/app/movies/movies.component.html","webpack:///./src/app/movies/movies.component.ts","webpack:///./src/app/services/movie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieDetailsComponent } from './moviedetails/moviedetails.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/movies', pathMatch: 'full' },\r\n  { path: 'movies', component: MoviesComponent },\r\n  { path: 'movies/:id', component: MovieDetailsComponent }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","<!--The content below is only a placeholder and can be replaced.-->\r\n<div class=\"container\">\r\n  <div class=\"col-xl-12 col-lg-12 appcontent\">\r\n    <div style=\"text-align:center\">\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"#\">{{ title }}</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a routerLink=\"/movies\" class=\"nav-link\">Dashboard</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MovieMinder 1.0';\n\n  constructor() {\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieDetailsComponent } from './moviedetails/moviedetails.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport * as ngxbs from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieDetailsComponent    \n  ],  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class movie {\n  id: number;\r\n  name: string;\r\n  synopsis: string;\r\n  seen: boolean;\r\n  release_date: Date;\r\n  backdrop_url: string;\r\n  poster_url: string;\r\n\r\n  constructor() {\r\n    this.seen = false;\r\n  };\r\n}\r\n","<div *ngIf=\"movie\" class=\"d-flex justify-content-center\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\"><h2>{{ movie.name | uppercase }}</h2></div>\r\n    <img class=\"card-img-top\" src=\"{{ movie.backdrop_url }}\" alt=\"\">\r\n    <div class=\"card-body\">\r\n      <p class=\"card-text\">{{ movie.synopsis }}</p>\r\n      <span>id: </span>{{movie.id}}\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\nimport { movie } from '../models/movie';\r\nimport { MovieService } from '../services/movie.service';\r\n\r\n@Component({\r\n  selector: 'app-movie-detail',\r\n  templateUrl: './moviedetails.component.html',\r\n  styleUrls: ['./moviedetails.component.css']\r\n})\r\n/** moviedetails component*/\r\nexport class MovieDetailsComponent implements OnInit {\r\n  @Input() movie: movie;\r\n\r\n  /** moviedetails ctor */\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private movieService: MovieService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getMovieDetails();\r\n  }\r\n\r\n  private getMovieDetails(): void {\r\n    var id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.movieService.getMovieDetail(id).then((movie: movie) => {\r\n      this.movie = movie;\r\n    });\r\n  }\r\n}\r\n","<h1>Movies</h1>\r\n<!--<app-movie-detail [movie]=\"selectedMovie\"></app-movie-detail>-->\r\n<div class=\"card-columns\">\r\n  <div class=\"card border-info movies\" *ngFor=\"let m of movies\">\r\n    <a routerLink=\"/movies/{{m.id}}\">\r\n      <img class=\"card-img-top\" src=\"{{ m.poster_url }}\" alt=\"{{ m.name }}\">\r\n      <div class=\"card-body text-info\">\r\n        <h4 class=\"text-muted\">{{ m.name | titlecase }}</h4>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { movie } from '../models/movie';\r\nimport { MovieService } from '../services/movie.service';\r\n\r\n@Component({\r\n  selector: 'app-movies',\r\n  templateUrl: './movies.component.html',\r\n  styleUrls: ['./movies.component.css']\r\n})\r\n/** movies component*/\r\nexport class MoviesComponent implements OnInit {\r\n  movies: movie[];\r\n  selectedMovie: movie;\r\n\r\n  /** movies ctor */\r\n  constructor(private movieService: MovieService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadMovies();\r\n  }\r\n\r\n  onselect(movie: movie): void {\r\n    this.selectedMovie = movie;\r\n  }\r\n\r\n  loadMovies(): void {\r\n    this.movieService.getMoviesNowPlaying().then((movies: movie[]) => {\r\n      this.movies = movies;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { movie } from '../models/movie';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MovieService {\r\n  apiKey: string = '098f3b2e36992519c1814874200fc995';\r\n  constructor() {\r\n  }\r\n\r\n  getMoviesMostPopular(): Promise<movie[]> {\r\n    return this.getMovieList(`https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getMoviesNowPlaying(): Promise<movie[]> {\r\n    return this.getMovieList(`https://api.themoviedb.org/3/movie/now_playing?page=1&language=en-US&api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getMovieDetail(id: number): Promise<movie> {\r\n    var options: RequestInit = {\r\n      method: 'GET'\r\n    };\r\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${this.apiKey}`, options)\r\n      .then((response: Response) => response.json())\r\n      .then((jsonData: any) => {\r\n        return this.newMovieObject(jsonData);\r\n      });\r\n  }\r\n\r\n  private getMovieList(resource: string): Promise<movie[]> {\r\n    var options: RequestInit = {\r\n      method: 'GET'\r\n    };\r\n    return fetch(resource, options)\r\n      .then((response: Response) => response.json())\r\n      .then((jsonData: any) => {\r\n        var movies: movie[] = new Array<movie>();\r\n        jsonData.results.forEach(json => {\r\n          movies.push(this.newMovieObject(json));\r\n        });\r\n        return movies;\r\n      });\r\n  }\r\n\r\n  private newMovieObject(json: any): movie {\r\n    var movieObj: movie = {\r\n      id: json.id,\r\n      name: json.title,\r\n      release_date: json.release_date,\r\n      seen: false,\r\n      synopsis: json.overview,\r\n      backdrop_url: `https://image.tmdb.org/t/p/w1280${json.backdrop_path}`,\r\n      poster_url: `https://image.tmdb.org/t/p/w500${json.poster_path}`\r\n    };\r\n    return movieObj;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}